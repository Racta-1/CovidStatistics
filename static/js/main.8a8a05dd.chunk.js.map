{"version":3,"sources":["images/covid19.png","components/Covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","state","info","country","selectedCountry","onInputChange","e","setState","target","value","listData","axios","get","headers","then","response","data","catch","err","console","log","onFormSubmit","preventDefault","this","className","width","height","src","covid19","alt","Form","onSubmit","Group","as","Row","Col","sm","span","offset","Control","size","custom","onChange","defaultValue","disabled","map","count","Button","type","Jumbotron","req","population","toString","replace","cases","active","critical","new","substring","recovered","deaths","total","Component","App","Container","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,MAA0B,oC,iBCya1BA,E,4MAlabC,MAAQ,CACNC,KAAM,GACNC,QAAS,CACP,MACA,cACA,SACA,UACA,UACA,UACA,SACA,WACA,sBACA,YACA,UACA,QACA,OACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,yBACA,WACA,SACA,yBACA,UACA,WACA,eACA,UACA,aACA,WACA,WACA,SACA,MACA,wBACA,iBACA,OACA,kBACA,QACA,QACA,WACA,UACA,QACA,aACA,UACA,OACA,iBACA,SACA,UACA,UACA,mBACA,oBACA,WACA,WACA,qBACA,MACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,WACA,SACA,iBACA,mBACA,OACA,UACA,SACA,gBACA,mBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,SACA,gBACA,SACA,QACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,QACA,cACA,UACA,QACA,SACA,aACA,QACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,aACA,SACA,WACA,WACA,OACA,QACA,aACA,aACA,YACA,UACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,aACA,cACA,UACA,UACA,QACA,cACA,gBACA,cACA,YACA,QACA,UACA,gBACA,kBACA,SACA,OACA,UACA,WACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,cACA,QACA,iBACA,UACA,SACA,SACA,WACA,wBACA,cACA,eACA,wBACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,eACA,WACA,WACA,UACA,eACA,gBACA,cACA,QACA,YACA,YACA,yBACA,QACA,WACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,cACA,OACA,sBACA,UACA,SACA,mBACA,sBACA,MACA,SACA,KACA,UACA,UACA,MACA,aACA,eACA,YACA,UACA,iBACA,QACA,SACA,YAEFC,gBAAiB,M,EAGnBC,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZH,gBAAiBE,EAAEE,OAAOC,S,EAI9BC,SAAW,WAAO,IACRN,EAAoB,EAAKH,MAAzBG,gBAKRO,IACGC,IADH,8DAE2DR,GACvD,CACES,QARO,CACX,iBAAkB,qDAClB,kBAAmB,8BASlBC,MAAK,SAACC,GACL,EAAKR,SAAS,CACZL,KAAMa,EAASC,KAAKD,cAGvBE,OAAM,SAACC,GACNC,QAAQC,IAAIF,O,EAIlBG,aAAe,SAACf,GACdA,EAAEgB,iBACF,EAAKZ,Y,uDAGG,IAAD,EACmBa,KAAKtB,MAAvBC,EADD,EACCA,KAAMC,EADP,EACOA,QACd,OACE,gCACE,qBAAIqB,UAAU,8DAAd,6BAEE,qBACEA,UAAU,iBACVC,MAAM,KACNC,OAAO,KACPC,IAAKC,EACLC,IAAI,kBAGR,cAACC,EAAA,EAAD,CAAMN,UAAU,OAAOO,SAAUR,KAAKF,aAAtC,SACE,eAACS,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAA5B,SACE,eAACR,EAAA,EAAKS,QAAN,CACEN,GAAG,SACHO,KAAK,KACLC,QAAM,EACNC,SAAUnB,KAAKlB,cACfsC,aAAc,UALhB,UAOE,wBAAQlC,MAAM,UAAUmC,UAAQ,EAAhC,4BAGCzC,EAAQ0C,KAAI,SAACC,GAAD,OACX,wBAAoBrC,MAAOqC,EAA3B,SACGA,GADUA,WAMnB,cAACX,EAAA,EAAD,CAAKC,GAAI,EAAGZ,UAAU,UAAtB,SACE,cAACuB,EAAA,EAAD,CAAQvB,UAAU,SAASwB,KAAK,SAAhC,0BAMN,eAACC,EAAA,EAAD,CAAWzB,UAAU,uBAArB,UACE,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,oBAAIZ,UAAU,yDAAd,uBAIF,cAACW,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,oBAAIZ,UAAU,yDAAd,wBAKHtB,EAAK2C,KAAI,SAACK,GAAD,OACR,eAAChB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,oBAAIZ,UAAU,2EAAd,SACE,+BAAO0B,EAAI/C,cAGf,cAACgC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,wBAAOX,UAAU,qDAAjB,wBAEE,sBAAMA,UAAU,OAAhB,SACqB,MAAlB0B,EAAIC,WACAD,EAAIC,WAAa,EAClBD,EAAIC,WACDC,WACAC,QAAQ,wBAAyB,UAG5C,uBACA,0CAEE,sBAAM7B,UAAU,OAAhB,SACuB,MAApB0B,EAAII,MAAMC,OACNL,EAAII,MAAMC,OAAS,EACpBL,EAAII,MAAMC,OACPH,WACAC,QAAQ,wBAAyB,UAG5C,uBACA,4CAEE,sBAAM7B,UAAU,OAAhB,SACyB,MAAtB0B,EAAII,MAAME,SACNN,EAAII,MAAME,SAAW,EACtBN,EAAII,MAAME,SACPJ,WACAC,QAAQ,wBAAyB,UAG5C,uBACA,uCAEE,sBAAM7B,UAAU,OAAhB,SACoB,MAAjB0B,EAAII,MAAMG,IACNP,EAAII,MAAMG,IAAM,EACjBP,EAAII,MAAMG,IACPL,WACAM,UAAU,GACVL,QAAQ,wBAAyB,UAG5C,uBACA,6CAEE,sBAAM7B,UAAU,OAAhB,SAC0B,MAAvB0B,EAAII,MAAMK,UACNT,EAAII,MAAMK,UAAY,EACvBT,EAAII,MAAMK,UACPP,WACAC,QAAQ,wBAAyB,UAG5C,uBACA,0CAEE,sBAAM7B,UAAU,OAAhB,SACuB,MAApB0B,EAAIU,OAAOC,MACPX,EAAIU,OAAOC,MAAQ,EACpBX,EAAIU,OAAOC,MACRT,WACAC,QAAQ,wBAAyB,UAG5C,uBACA,qBAAI7B,UAAU,aAAd,oBAEE,sBAAMA,UAAU,OAAhB,SACG0B,EAAII,MAAMO,MACRT,WACAC,QAAQ,wBAAyB,mBAjFtCH,EAAI/C,sB,GApUN2D,aCULC,E,uKARX,OACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAAC,EAAD,U,GAJUH,aCMHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8a8a05dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/covid19.87883867.png\";","import React, { Component } from 'react';\r\nimport { Form, Button, Row, Col, Jumbotron } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport covid19 from '../images/covid19.png';\r\nimport axios from 'axios';\r\n\r\nclass Covid extends Component {\r\n  state = {\r\n    info: [],\r\n    country: [\r\n      'All',\r\n      'Afghanistan',\r\n      'Africa',\r\n      'Albania',\r\n      'Algeria',\r\n      'Andorra',\r\n      'Angola',\r\n      'Anguilla',\r\n      'Antigua-and-Barbuda',\r\n      'Argentina',\r\n      'Armenia',\r\n      'Aruba',\r\n      'Asia',\r\n      'Australia',\r\n      'Austria',\r\n      'Azerbaijan',\r\n      'Bahamas',\r\n      'Bahrain',\r\n      'Bangladesh',\r\n      'Barbados',\r\n      'Belarus',\r\n      'Belgium',\r\n      'Belize',\r\n      'Benin',\r\n      'Bermuda',\r\n      'Bhutan',\r\n      'Bolivia',\r\n      'Bosnia-and-Herzegovina',\r\n      'Botswana',\r\n      'Brazil',\r\n      'British-Virgin-Islands',\r\n      'Brunei-',\r\n      'Bulgaria',\r\n      'Burkina-Faso',\r\n      'Burundi',\r\n      'Cabo-Verde',\r\n      'Cambodia',\r\n      'Cameroon',\r\n      'Canada',\r\n      'CAR',\r\n      'Caribbean-Netherlands',\r\n      'Cayman-Islands',\r\n      'Chad',\r\n      'Channel-Islands',\r\n      'Chile',\r\n      'China',\r\n      'Colombia',\r\n      'Comoros',\r\n      'Congo',\r\n      'Costa-Rica',\r\n      'Croatia',\r\n      'Cuba',\r\n      'Cura&ccedil;ao',\r\n      'Cyprus',\r\n      'Czechia',\r\n      'Denmark',\r\n      'Diamond-Princess',\r\n      'Diamond-Princess-',\r\n      'Djibouti',\r\n      'Dominica',\r\n      'Dominican-Republic',\r\n      'DRC',\r\n      'Ecuador',\r\n      'Egypt',\r\n      'El-Salvador',\r\n      'Equatorial-Guinea',\r\n      'Eritrea',\r\n      'Estonia',\r\n      'Eswatini',\r\n      'Ethiopia',\r\n      'Europe',\r\n      'Faeroe-Islands',\r\n      'Falkland-Islands',\r\n      'Fiji',\r\n      'Finland',\r\n      'France',\r\n      'French-Guiana',\r\n      'French-Polynesia',\r\n      'Gabon',\r\n      'Gambia',\r\n      'Georgia',\r\n      'Germany',\r\n      'Ghana',\r\n      'Gibraltar',\r\n      'Greece',\r\n      'Greenland',\r\n      'Grenada',\r\n      'Guadeloupe',\r\n      'Guam',\r\n      'Guatemala',\r\n      'Guinea',\r\n      'Guinea-Bissau',\r\n      'Guyana',\r\n      'Haiti',\r\n      'Honduras',\r\n      'Hong-Kong',\r\n      'Hungary',\r\n      'Iceland',\r\n      'India',\r\n      'Indonesia',\r\n      'Iran',\r\n      'Iraq',\r\n      'Ireland',\r\n      'Isle-of-Man',\r\n      'Israel',\r\n      'Italy',\r\n      'Ivory-Coast',\r\n      'Jamaica',\r\n      'Japan',\r\n      'Jordan',\r\n      'Kazakhstan',\r\n      'Kenya',\r\n      'Kuwait',\r\n      'Kyrgyzstan',\r\n      'Laos',\r\n      'Latvia',\r\n      'Lebanon',\r\n      'Lesotho',\r\n      'Liberia',\r\n      'Libya',\r\n      'Liechtenstein',\r\n      'Lithuania',\r\n      'Luxembourg',\r\n      'Macao',\r\n      'Madagascar',\r\n      'Malawi',\r\n      'Malaysia',\r\n      'Maldives',\r\n      'Mali',\r\n      'Malta',\r\n      'Martinique',\r\n      'Mauritania',\r\n      'Mauritius',\r\n      'Mayotte',\r\n      'Mexico',\r\n      'Moldova',\r\n      'Monaco',\r\n      'Mongolia',\r\n      'Montenegro',\r\n      'Montserrat',\r\n      'Morocco',\r\n      'Mozambique',\r\n      'MS-Zaandam',\r\n      'MS-Zaandam-',\r\n      'Myanmar',\r\n      'Namibia',\r\n      'Nepal',\r\n      'Netherlands',\r\n      'New-Caledonia',\r\n      'New-Zealand',\r\n      'Nicaragua',\r\n      'Niger',\r\n      'Nigeria',\r\n      'North-America',\r\n      'North-Macedonia',\r\n      'Norway',\r\n      'Oman',\r\n      'Oceania',\r\n      'Pakistan',\r\n      'Palestine',\r\n      'Panama',\r\n      'Papua-New-Guinea',\r\n      'Paraguay',\r\n      'Peru',\r\n      'Philippines',\r\n      'Poland',\r\n      'Portugal',\r\n      'Puerto-Rico',\r\n      'Qatar',\r\n      'R&eacute;union',\r\n      'Romania',\r\n      'Russia',\r\n      'Rwanda',\r\n      'S.-Korea',\r\n      'Saint-Kitts-and-Nevis',\r\n      'Saint-Lucia',\r\n      'Saint-Martin',\r\n      'Saint-Pierre-Miquelon',\r\n      'San-Marino',\r\n      'Sao-Tome-and-Principe',\r\n      'Saudi-Arabia',\r\n      'Senegal',\r\n      'Serbia',\r\n      'Seychelles',\r\n      'Sierra-Leone',\r\n      'Singapore',\r\n      'Sint-Maarten',\r\n      'Slovakia',\r\n      'Slovenia',\r\n      'Somalia',\r\n      'South-Africa',\r\n      'South-America',\r\n      'South-Sudan',\r\n      'Spain',\r\n      'Sri-Lanka',\r\n      'St.-Barth',\r\n      'St.-Vincent-Grenadines',\r\n      'Sudan',\r\n      'Suriname',\r\n      'Sweden',\r\n      'Switzerland',\r\n      'Syria',\r\n      'Taiwan',\r\n      'Tajikistan',\r\n      'Tanzania',\r\n      'Thailand',\r\n      'Timor-Leste',\r\n      'Togo',\r\n      'Trinidad-and-Tobago',\r\n      'Tunisia',\r\n      'Turkey',\r\n      'Turks-and-Caicos',\r\n      'U.S.-Virgin-Islands',\r\n      'UAE',\r\n      'Uganda',\r\n      'UK',\r\n      'Ukraine',\r\n      'Uruguay',\r\n      'USA',\r\n      'Uzbekistan',\r\n      'Vatican-City',\r\n      'Venezuela',\r\n      'Vietnam',\r\n      'Western-Sahara',\r\n      'Yemen',\r\n      'Zambia',\r\n      'Zimbabwe',\r\n    ],\r\n    selectedCountry: null,\r\n  };\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({\r\n      selectedCountry: e.target.value,\r\n    });\r\n  };\r\n\r\n  listData = () => {\r\n    const { selectedCountry } = this.state;\r\n    const data = {\r\n      'x-rapidapi-key': '8c896413c0msh5b94573c829464ep19e019jsnb748311900da',\r\n      'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n    };\r\n    axios\r\n      .get(\r\n        `https://covid-193.p.rapidapi.com/statistics?country=${selectedCountry}`,\r\n        {\r\n          headers: data,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        this.setState({\r\n          info: response.data.response,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.listData();\r\n  };\r\n\r\n  render() {\r\n    const { info, country } = this.state;\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-2 text-white text-center font-weight-bold mb-5 mt-3\">\r\n          Covid Statistics\r\n          <img\r\n            className=\"img-fluid ml-4\"\r\n            width=\"60\"\r\n            height=\"60\"\r\n            src={covid19}\r\n            alt=\"Covid Logo\"\r\n          />\r\n        </h1>\r\n        <Form className=\"mb-5\" onSubmit={this.onFormSubmit}>\r\n          <Form.Group as={Row}>\r\n            <Col sm={{ span: 7, offset: 2 }}>\r\n              <Form.Control\r\n                as=\"select\"\r\n                size=\"lg\"\r\n                custom\r\n                onChange={this.onInputChange}\r\n                defaultValue={'DEFAULT'}\r\n              >\r\n                <option value=\"DEFAULT\" disabled>\r\n                  Select Country\r\n                </option>\r\n                {country.map((count) => (\r\n                  <option key={count} value={count}>\r\n                    {count}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm={3} className=\"mx-auto\">\r\n              <Button className=\"btn-lg\" type=\"submit\">\r\n                Check\r\n              </Button>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n        <Jumbotron className=\"mt-5 bg-white shadow\">\r\n          <Row>\r\n            <Col sm={6}>\r\n              <h1 className=\"mb-5 p-3 bg-back text-white text-center rounded shadow\">\r\n                Country\r\n              </h1>\r\n            </Col>\r\n            <Col sm={6}>\r\n              <h1 className=\"mb-5 p-3 bg-back text-white text-center rounded shadow\">\r\n                Cases\r\n              </h1>\r\n            </Col>\r\n          </Row>\r\n          {info.map((req) => (\r\n            <Row key={req.country}>\r\n              <Col sm={6}>\r\n                <h2 className=\"mt-5 mb-5 p-5 bg-primary text-white text-center display-2 rounded shadow\">\r\n                  <span>{req.country}</span>\r\n                </h2>\r\n              </Col>\r\n              <Col sm={6}>\r\n                <Row>\r\n                  <Col>\r\n                    <small className=\"bg-primary text-white font-weight-bold p-2 rounded\">\r\n                      Population:\r\n                      <span className=\"ml-5\">\r\n                        {req.population == null\r\n                          ? (req.population = 0)\r\n                          : req.population\r\n                              .toString()\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                      </span>\r\n                    </small>\r\n                    <hr />\r\n                    <h4>\r\n                      Active :\r\n                      <span className=\"ml-5\">\r\n                        {req.cases.active == null\r\n                          ? (req.cases.active = 0)\r\n                          : req.cases.active\r\n                              .toString()\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                      </span>\r\n                    </h4>\r\n                    <hr />\r\n                    <h4>\r\n                      Critical :\r\n                      <span className=\"ml-5\">\r\n                        {req.cases.critical == null\r\n                          ? (req.cases.critical = 0)\r\n                          : req.cases.critical\r\n                              .toString()\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                      </span>\r\n                    </h4>\r\n                    <hr />\r\n                    <h4>\r\n                      New :\r\n                      <span className=\"ml-5\">\r\n                        {req.cases.new == null\r\n                          ? (req.cases.new = 0)\r\n                          : req.cases.new\r\n                              .toString()\r\n                              .substring(1)\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                      </span>\r\n                    </h4>\r\n                    <hr />\r\n                    <h4>\r\n                      Recovered :\r\n                      <span className=\"ml-5\">\r\n                        {req.cases.recovered == null\r\n                          ? (req.cases.recovered = 0)\r\n                          : req.cases.recovered\r\n                              .toString()\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                      </span>\r\n                    </h4>\r\n                    <hr />\r\n                    <h4>\r\n                      Deaths :\r\n                      <span className=\"ml-5\">\r\n                        {req.deaths.total == null\r\n                          ? (req.deaths.total = 0)\r\n                          : req.deaths.total\r\n                              .toString()\r\n                              .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                      </span>\r\n                    </h4>\r\n                    <hr />\r\n                    <h2 className=\"text-right\">\r\n                      Total :\r\n                      <span className=\"ml-5\">\r\n                        {req.cases.total\r\n                          .toString()\r\n                          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                      </span>\r\n                    </h2>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Covid;\r\n","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Covid from './components/Covid';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container fluid>\n        <Covid />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}